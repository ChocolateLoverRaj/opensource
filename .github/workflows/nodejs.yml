name: nodejs

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-18.04, macos-latest]
        node-version: [8.x, 10.x, 12.x]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Installing dependencies
        run: yarn setup:ci
        env:
          CI: true
      - name: Linting codebase with ESLint & Prettier
        run: yarn hela lint
        env:
          CI: true
      # - name: Type checking codebase
      #   run: yarn typecheck || yarn check || echo "No typescript, no type checking"
      - name: Running tests
        run: yarn hela test
        env:
          CI: true

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: 'https://registry.npmjs.org/'
      - name: Prepare for Lerna Publishing
        run: |
          git config --global user.name "Charlike Mike Reagent"
          git config --global user.email "opensource@tunnckocore.com"
          git config --global user.signingkey $GIT_SIGNING_KEY
          git config --global commit.gpgsign true
          git config --global push.followTags true
          npm set //registry.npmjs.org/:_authToken $NPM_TOKEN

          # git remote set-url origin https://tunnckocore:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          # git checkout $TRAVIS_BRANCH
        if: github.event_name == 'push'
        env:
          CI: true
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GIT_SIGNING_KEY: ${{secrets.GIT_SIGNING_KEY}}
      - name: Lerna Publishing
        run: npx lerna version && npx lerna publish from-package
        if: github.event_name == 'push'
        env:
          CI: true
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GIT_SIGNING_KEY: ${{secrets.GIT_SIGNING_KEY}}
