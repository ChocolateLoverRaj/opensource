name: nodejs

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  test:
    env:
      CI: true
      CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        node-version: [10.x, 12.x]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        id: nodejs-cache
        name: Cache node modules
        with:
          path: node_modules
          key: ${{ matrix.platform }}-nodejs-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ matrix.platform }}-nodejs-${{ matrix.node-version }}-
            ${{ matrix.platform }}-nodejs-
            ${{ matrix.platform }}-
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node-version }}
      - name: Installing dependencies
        if: steps.nodejs-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
      - name: Lerna Bootstrap
        run: yarn run bootstrap
      - name: Linting codebase with ESLint & Prettier
        run: yarn start lint --no-runInBand
      - name: Testing all packages
        run: yarn start test --no-runInBand
      - name: Sending test coverage to CodeCov
        if: matrix.platform == 'ubuntu-latest'
        run: echo ${{ matrix.node-version }} && bash <(curl -s https://codecov.io/bash)
  # node12:
  #   env:
  #     CI: true
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Use Node.js v12
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'
  #     - name: Installing dependencies
  #       run: yarn setup:ci
  #     - name: Documentation API generation
  #       run: yarn start docs
  #     - name: Formatting the whole repository with Prettier
  #       run: yarn start format
  #     - name: Prepare for Publishing and Releasing
  #       run: |
  #         git config --global user.name "Charlike Mike Reagent"
  #         git config --global user.email "opensource@tunnckocore.com"
  #         git config --global commit.gpgsign false
  #         git config --global push.followTags true
  #         npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
  #         git checkout master
  #         git remote set-url origin https://tunnckoCore:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
  #       if: github.event_name == 'push'
  #       env:
  #         CI: true
  #         NPM_TOKEN: ${{secrets.NPM_TOKEN}}
  #         GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #     - name: Publishing and Releasing
  #       run: npx lerna version --yes && npx lerna publish from-package --yes
  #       if: github.event_name == 'push'
  #       env:
  #         CI: true
  #         NPM_TOKEN: ${{secrets.NPM_TOKEN}}
  #         GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #         GIT_SIGNING_KEY: ${{secrets.GIT_SIGNING_KEY}}
