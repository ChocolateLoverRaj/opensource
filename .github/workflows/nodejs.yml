name: nodejs

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  test:
    env:
      CI: true
    strategy:
      matrix:
        platform: [ubuntu-18.04, macos-latest]
        node-version: [8.x, 10.x, 12.x]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Installing dependencies
        run: yarn setup:ci
      - name: Testing all packages
        run: yarn start test --no-runInBand
  node12:
    env:
      CI: true
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js v12
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Installing dependencies
        run: yarn setup:ci
      - name: Linting codebase with ESLint & Prettier
        run: yarn start lint
      - name: Documentation API generation
        run: yarn start docs
      - name: Formatting whole with Prettier
        run: yarn start format
  # release:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 12
  #         registry-url: 'https://registry.npmjs.org/'
  #     - name: Prepare for Lerna Publishing
  #       run: |
  #         git config --global user.name "Charlike Mike Reagent"
  #         git config --global user.email "opensource@tunnckocore.com"
  #         git config --global commit.gpgsign false
  #         git config --global push.followTags true
  #         npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
  #         git checkout master
  #         git remote set-url origin https://tunnckoCore:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
  #       if: github.event_name == 'push'
  #       env:
  #         CI: true
  #         NPM_TOKEN: ${{secrets.NPM_TOKEN}}
  #         GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #     - name: Lerna Publishing
  #       run: npx lerna version --yes && npx lerna publish from-package --yes
  #       if: github.event_name == 'push'
  #       env:
  #         CI: true
  #         NPM_TOKEN: ${{secrets.NPM_TOKEN}}
  #         GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #         GIT_SIGNING_KEY: ${{secrets.GIT_SIGNING_KEY}}
